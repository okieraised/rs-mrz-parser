use std::collections::HashMap;
use std::sync::LazyLock;

pub const TYPE1_NUMBER_OF_CHARACTERS_PER_LINE: usize = 30;

pub const TYPE2_NUMBER_OF_CHARACTERS_PER_LINE: usize = 36;

pub const TYPE3_NUMBER_OF_CHARACTERS_PER_LINE: usize = 44;

pub const WEIGHTS: [i32; 3] = [7, 3, 1];

pub static ALPHABET_MAPPING: LazyLock<HashMap<char, i32>> = LazyLock::new(|| {
    let m: HashMap<char, i32> = ('A'..='Z').zip(10..36).collect();
    m
});

pub static ISSUING_COUNTRY_CODES: LazyLock<HashMap<&'static str, &'static str>> = LazyLock::new(|| {
    let mut issuing_country_codes = HashMap::new();

    issuing_country_codes.insert("ABW", "Aruba");
    issuing_country_codes.insert("AFG", "Afghanistan");
    issuing_country_codes.insert("AGO", "Angola");
    issuing_country_codes.insert("AIA", "Anguilla");
    issuing_country_codes.insert("ALA", "Åland Islands");
    issuing_country_codes.insert("ALB", "Albania");
    issuing_country_codes.insert("AND", "Andorra");
    issuing_country_codes.insert("ARE", "United Arab Emirates");
    issuing_country_codes.insert("ARG", "Argentina");
    issuing_country_codes.insert("ARM", "Armenia");
    issuing_country_codes.insert("ASM", "American Samoa");
    issuing_country_codes.insert("ATA", "Antarctica");
    issuing_country_codes.insert("ATF", "French Southern Territories");
    issuing_country_codes.insert("ATG", "Antigua and Barbuda");
    issuing_country_codes.insert("AUS", "Australia");
    issuing_country_codes.insert("AUT", "Austria");
    issuing_country_codes.insert("AZE", "Azerbaijan");
    issuing_country_codes.insert("BDI", "Burundi");
    issuing_country_codes.insert("BEL", "Belgium");
    issuing_country_codes.insert("BEN", "Benin");
    issuing_country_codes.insert("BES", "Bonaire, Sint Eustatius and Saba");
    issuing_country_codes.insert("BFA", "Burkina Faso");
    issuing_country_codes.insert("BGD", "Bangladesh");
    issuing_country_codes.insert("BGR", "Bulgaria");
    issuing_country_codes.insert("BHR", "Bahrain");
    issuing_country_codes.insert("BHS", "Bahamas");
    issuing_country_codes.insert("BIH", "Bosnia and Herzegovina");
    issuing_country_codes.insert("BLM", "Saint Barthélemy");
    issuing_country_codes.insert("BLR", "Belarus");
    issuing_country_codes.insert("BLZ", "Belize");
    issuing_country_codes.insert("BMU", "Bermuda");
    issuing_country_codes.insert("BOL", "Bolivia, Plurinational State of");
    issuing_country_codes.insert("BRA", "Brazil");
    issuing_country_codes.insert("BRB", "Barbados");
    issuing_country_codes.insert("BRN", "Brunei Darussalam");
    issuing_country_codes.insert("BTN", "Bhutan");
    issuing_country_codes.insert("BVT", "Bouvet Island");
    issuing_country_codes.insert("BWA", "Botswana");
    issuing_country_codes.insert("CAF", "Central African Republic");
    issuing_country_codes.insert("CAN", "Canada");
    issuing_country_codes.insert("CCK", "Cocos (Keeling) Islands");
    issuing_country_codes.insert("CHE", "Switzerland");
    issuing_country_codes.insert("CHL", "Chile");
    issuing_country_codes.insert("CHN", "China");
    issuing_country_codes.insert("CIV", "Côte d'Ivoire");
    issuing_country_codes.insert("CMR", "Cameroon");
    issuing_country_codes.insert("COD", "Congo, Democratic Republic of the");
    issuing_country_codes.insert("COG", "Congo");
    issuing_country_codes.insert("COK", "Cook Islands");
    issuing_country_codes.insert("COL", "Colombia");
    issuing_country_codes.insert("COM", "Comoros");
    issuing_country_codes.insert("CPV", "Cabo Verde");
    issuing_country_codes.insert("CRI", "Costa Rica");
    issuing_country_codes.insert("CUB", "Cuba");
    issuing_country_codes.insert("CUW", "Curaçao");
    issuing_country_codes.insert("CXR", "Christmas Island");
    issuing_country_codes.insert("CYM", "Cayman Islands");
    issuing_country_codes.insert("CYP", "Cyprus");
    issuing_country_codes.insert("CZE", "Czechia");
    issuing_country_codes.insert("DEU", "Germany");
    issuing_country_codes.insert("DJI", "Djibouti");
    issuing_country_codes.insert("DMA", "Dominica");
    issuing_country_codes.insert("DNK", "Denmark");
    issuing_country_codes.insert("DOM", "Dominican Republic");
    issuing_country_codes.insert("DZA", "Algeria");
    issuing_country_codes.insert("ECU", "Ecuador");
    issuing_country_codes.insert("EGY", "Egypt");
    issuing_country_codes.insert("ERI", "Eritrea");
    issuing_country_codes.insert("ESH", "Western Sahara");
    issuing_country_codes.insert("ESP", "Spain");
    issuing_country_codes.insert("EST", "Estonia");
    issuing_country_codes.insert("ETH", "Ethiopia");
    issuing_country_codes.insert("FIN", "Finland");
    issuing_country_codes.insert("FJI", "Fiji");
    issuing_country_codes.insert("FLK", "Falkland Islands (Malvinas)");
    issuing_country_codes.insert("FRA", "France");
    issuing_country_codes.insert("FRO", "Faroe Islands");
    issuing_country_codes.insert("FSM", "Micronesia, Federated States of");
    issuing_country_codes.insert("GAB", "Gabon");
    issuing_country_codes.insert("GBR", "United Kingdom of Great Britain and Northern Ireland");
    issuing_country_codes.insert("GEO", "Georgia");
    issuing_country_codes.insert("GGY", "Guernsey");
    issuing_country_codes.insert("GHA", "Ghana");
    issuing_country_codes.insert("GIB", "Gibraltar");
    issuing_country_codes.insert("GIN", "Guinea");
    issuing_country_codes.insert("GLP", "Guadeloupe");
    issuing_country_codes.insert("GMB", "Gambia");
    issuing_country_codes.insert("GNB", "Guinea-Bissau");
    issuing_country_codes.insert("GNQ", "Equatorial Guinea");
    issuing_country_codes.insert("GRC", "Greece");
    issuing_country_codes.insert("GRD", "Grenada");
    issuing_country_codes.insert("GRL", "Greenland");
    issuing_country_codes.insert("GTM", "Guatemala");
    issuing_country_codes.insert("GUF", "French Guiana");
    issuing_country_codes.insert("GUM", "Guam");
    issuing_country_codes.insert("GUY", "Guyana");
    issuing_country_codes.insert("HKG", "Hong Kong");
    issuing_country_codes.insert("HMD", "Heard Island and McDonald Islands");
    issuing_country_codes.insert("HND", "Honduras");
    issuing_country_codes.insert("HRV", "Croatia");
    issuing_country_codes.insert("HTI", "Haiti");
    issuing_country_codes.insert("HUN", "Hungary");
    issuing_country_codes.insert("IDN", "Indonesia");
    issuing_country_codes.insert("IMN", "Isle of Man");
    issuing_country_codes.insert("IND", "India");
    issuing_country_codes.insert("IOT", "British Indian Ocean Territory");
    issuing_country_codes.insert("IRL", "Ireland");
    issuing_country_codes.insert("IRN", "Iran, Islamic Republic of");
    issuing_country_codes.insert("IRQ", "Iraq");
    issuing_country_codes.insert("ISL", "Iceland");
    issuing_country_codes.insert("ISR", "Israel");
    issuing_country_codes.insert("ITA", "Italy");
    issuing_country_codes.insert("JAM", "Jamaica");
    issuing_country_codes.insert("JEY", "Jersey");
    issuing_country_codes.insert("JOR", "Jordan");
    issuing_country_codes.insert("JPN", "Japan");
    issuing_country_codes.insert("KAZ", "Kazakhstan");
    issuing_country_codes.insert("KEN", "Kenya");
    issuing_country_codes.insert("KGZ", "Kyrgyzstan");
    issuing_country_codes.insert("KHM", "Cambodia");
    issuing_country_codes.insert("KIR", "Kiribati");
    issuing_country_codes.insert("KNA", "Saint Kitts and Nevis");
    issuing_country_codes.insert("KOR", "Korea, Republic of");
    issuing_country_codes.insert("KWT", "Kuwait");
    issuing_country_codes.insert("LAO", "Lao People's Democratic Republic");
    issuing_country_codes.insert("LBN", "Lebanon");
    issuing_country_codes.insert("LBR", "Liberia");
    issuing_country_codes.insert("LBY", "Libya");
    issuing_country_codes.insert("LCA", "Saint Lucia");
    issuing_country_codes.insert("LIE", "Liechtenstein");
    issuing_country_codes.insert("LKA", "Sri Lanka");
    issuing_country_codes.insert("LSO", "Lesotho");
    issuing_country_codes.insert("LTU", "Lithuania");
    issuing_country_codes.insert("LUX", "Luxembourg");
    issuing_country_codes.insert("LVA", "Latvia");
    issuing_country_codes.insert("MAC", "Macao");
    issuing_country_codes.insert("MAF", "Saint Martin (French part)");
    issuing_country_codes.insert("MAR", "Morocco");
    issuing_country_codes.insert("MCO", "Monaco");
    issuing_country_codes.insert("MDA", "Moldova, Republic of");
    issuing_country_codes.insert("MDG", "Madagascar");
    issuing_country_codes.insert("MDV", "Maldives");
    issuing_country_codes.insert("MEX", "Mexico");
    issuing_country_codes.insert("MHL", "Marshall Islands");
    issuing_country_codes.insert("MKD", "North Macedonia");
    issuing_country_codes.insert("MLI", "Mali");
    issuing_country_codes.insert("MLT", "Malta");
    issuing_country_codes.insert("MMR", "Myanmar");
    issuing_country_codes.insert("MNE", "Montenegro");
    issuing_country_codes.insert("MNG", "Mongolia");
    issuing_country_codes.insert("MNP", "Northern Mariana Islands");
    issuing_country_codes.insert("MOZ", "Mozambique");
    issuing_country_codes.insert("MRT", "Mauritania");
    issuing_country_codes.insert("MSR", "Montserrat");
    issuing_country_codes.insert("MTQ", "Martinique");
    issuing_country_codes.insert("MUS", "Mauritius");
    issuing_country_codes.insert("MWI", "Malawi");
    issuing_country_codes.insert("MYS", "Malaysia");
    issuing_country_codes.insert("MYT", "Mayotte");
    issuing_country_codes.insert("NAM", "Namibia");
    issuing_country_codes.insert("NCL", "New Caledonia");
    issuing_country_codes.insert("NER", "Niger");
    issuing_country_codes.insert("NFK", "Norfolk Island");
    issuing_country_codes.insert("NGA", "Nigeria");
    issuing_country_codes.insert("NIC", "Nicaragua");
    issuing_country_codes.insert("NIU", "Niue");
    issuing_country_codes.insert("NLD", "Netherlands");
    issuing_country_codes.insert("NOR", "Norway");
    issuing_country_codes.insert("NPL", "Nepal");
    issuing_country_codes.insert("NRU", "Nauru");
    issuing_country_codes.insert("NZL", "New Zealand");
    issuing_country_codes.insert("OMN", "Oman");
    issuing_country_codes.insert("PAK", "Pakistan");
    issuing_country_codes.insert("PAN", "Panama");
    issuing_country_codes.insert("PCN", "Pitcairn");
    issuing_country_codes.insert("PER", "Peru");
    issuing_country_codes.insert("PHL", "Philippines");
    issuing_country_codes.insert("PLW", "Palau");
    issuing_country_codes.insert("PNG", "Papua New Guinea");
    issuing_country_codes.insert("POL", "Poland");
    issuing_country_codes.insert("PRI", "Puerto Rico");
    issuing_country_codes.insert("PRK", "Korea, Democratic People's Republic of");
    issuing_country_codes.insert("PRT", "Portugal");
    issuing_country_codes.insert("PRY", "Paraguay");
    issuing_country_codes.insert("PSE", "Palestine, State of");
    issuing_country_codes.insert("PYF", "French Polynesia");
    issuing_country_codes.insert("QAT", "Qatar");
    issuing_country_codes.insert("REU", "Réunion");
    issuing_country_codes.insert("ROU", "Romania");
    issuing_country_codes.insert("RUS", "Russian Federation");
    issuing_country_codes.insert("RWA", "Rwanda");
    issuing_country_codes.insert("SAU", "Saudi Arabia");
    issuing_country_codes.insert("SDN", "Sudan");
    issuing_country_codes.insert("SEN", "Senegal");
    issuing_country_codes.insert("SGP", "Singapore");
    issuing_country_codes.insert("SGS", "South Georgia and the South Sandwich Islands");
    issuing_country_codes.insert("SHN", "Saint Helena, Ascension and Tristan da Cunha");
    issuing_country_codes.insert("SJM", "Svalbard and Jan Mayen");
    issuing_country_codes.insert("SLB", "Solomon Islands");
    issuing_country_codes.insert("SLE", "Sierra Leone");
    issuing_country_codes.insert("SLV", "El Salvador");
    issuing_country_codes.insert("SMR", "San Marino");
    issuing_country_codes.insert("SOM", "Somalia");
    issuing_country_codes.insert("SPM", "Saint Pierre and Miquelon");
    issuing_country_codes.insert("SRB", "Serbia");
    issuing_country_codes.insert("SSD", "South Sudan");
    issuing_country_codes.insert("STP", "Sao Tome and Principe");
    issuing_country_codes.insert("SUR", "Suriname");
    issuing_country_codes.insert("SVK", "Slovakia");
    issuing_country_codes.insert("SVN", "Slovenia");
    issuing_country_codes.insert("SWE", "Sweden");
    issuing_country_codes.insert("SWZ", "Eswatini");
    issuing_country_codes.insert("SXM", "Sint Maarten (Dutch part)");
    issuing_country_codes.insert("SYC", "Seychelles");
    issuing_country_codes.insert("SYR", "Syrian Arab Republic");
    issuing_country_codes.insert("TCA", "Turks and Caicos Islands");
    issuing_country_codes.insert("TCD", "Chad");
    issuing_country_codes.insert("TGO", "Togo");
    issuing_country_codes.insert("THA", "Thailand");
    issuing_country_codes.insert("TJK", "Tajikistan");
    issuing_country_codes.insert("TKL", "Tokelau");
    issuing_country_codes.insert("TKM", "Turkmenistan");
    issuing_country_codes.insert("TLS", "Timor-Leste");
    issuing_country_codes.insert("TON", "Tonga");
    issuing_country_codes.insert("TTO", "Trinidad and Tobago");
    issuing_country_codes.insert("TUN", "Tunisia");
    issuing_country_codes.insert("TUR", "Türkiye");
    issuing_country_codes.insert("TUV", "Tuvalu");
    issuing_country_codes.insert("TWN", "Taiwan, Province of China");
    issuing_country_codes.insert("TZA", "Tanzania, United Republic of");
    issuing_country_codes.insert("UGA", "Uganda");
    issuing_country_codes.insert("UKR", "Ukraine");
    issuing_country_codes.insert("UMI", "United States Minor Outlying Islands");
    issuing_country_codes.insert("URY", "Uruguay");
    issuing_country_codes.insert("USA", "United States of America");
    issuing_country_codes.insert("UZB", "Uzbekistan");
    issuing_country_codes.insert("VAT", "Holy See");
    issuing_country_codes.insert("VCT", "Saint Vincent and the Grenadines");
    issuing_country_codes.insert("VEN", "Venezuela (Bolivarian Republic of)");
    issuing_country_codes.insert("VGB", "Virgin Islands (British)");
    issuing_country_codes.insert("VIR", "Virgin Islands (U.S.)");
    issuing_country_codes.insert("VNM", "Viet Nam");
    issuing_country_codes.insert("VUT", "Vanuatu");
    issuing_country_codes.insert("WLF", "Wallis and Futuna");
    issuing_country_codes.insert("WSM", "Samoa");
    issuing_country_codes.insert("YEM", "Yemen");
    issuing_country_codes.insert("ZAF", "South Africa");
    issuing_country_codes.insert("ZMB", "Zambia");
    issuing_country_codes.insert("ZWE", "Zimbabwe");
    issuing_country_codes.insert("D", "Germany");
    issuing_country_codes.insert("XCE", "Council of Europe");
    issuing_country_codes.insert("XBA", "African Development Bank");
    issuing_country_codes.insert("XIM", "African Export–Import Bank");
    issuing_country_codes.insert("XCC", "Caribbean Community");
    issuing_country_codes.insert("XCO", "Common Market for Eastern and Southern Africa");
    issuing_country_codes.insert("XEC", "Economic Community of West African States");
    issuing_country_codes.insert("XES", "Organization of Eastern Caribbean States");
    issuing_country_codes.insert("XMP", "Parliamentary Assembly of the Mediterranean");
    issuing_country_codes.insert("XPO", "International Criminal Police Organization (Interpol)");
    issuing_country_codes.insert("IMO", "International Maritime Organisation");
    issuing_country_codes.insert("RKS", "Kosovo");
    issuing_country_codes.insert("XOM", "Sovereign Military Order of Malta");
    issuing_country_codes.insert("XDC", "Southern African Development Community");
    issuing_country_codes.insert("WSA", "World Service Authority World Passport");
    issuing_country_codes.insert("UNK", "United Nations Interim Administration Mission in Kosovo (UNMIK)");
    issuing_country_codes.insert("UNO", "United Nations Organization Official");
    issuing_country_codes.insert("UNA", "United Nations Organization Specialized Agency Official");
    issuing_country_codes.insert("XAA", "Stateless (per Article 1 of 1954 convention)");
    issuing_country_codes.insert("XXB", "Refugee (per Article 1 of 1951 convention, amended by 1967 protocol)");
    issuing_country_codes.insert("XXC", "Refugee (non-convention)");
    issuing_country_codes.insert("XXX", "Unspecified Nationality / Unknown");
    issuing_country_codes.insert("UTO", "Utopia");
    issuing_country_codes
        .insert("GBD", "United Kingdom of Great Britain and Northern Ireland Dependent Territories Citizen");
    issuing_country_codes.insert("GBN", "United Kingdom of Great Britain and Northern Ireland National (Overseas)");
    issuing_country_codes.insert("GBO", "United Kingdom of Great Britain and Northern Ireland Overseas Citizen");
    issuing_country_codes.insert("GBP", "United Kingdom of Great Britain and Northern Ireland Protected Person");
    issuing_country_codes.insert("GBS", "United Kingdom of Great Britain and Northern Ireland Subject");

    issuing_country_codes
});
